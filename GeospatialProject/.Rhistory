m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
source('~/.active-rstudio-document')
devtools::install_github('bhaskarvk/leaflet.extras')
install.packages("E:/SMU/Year3/Sem2/Geo/brunob-leaflet.fullscreen-1.4.2-2-g7716a2f.zip", repos = NULL, type = "win.binary")
install.packages("E:/SMU/Year3/Sem2/Geo/brunob-leaflet.fullscreen-1.4.2-2-g7716a2f.zip", repos = NULL, type = "win.binary")
install.packages("E:/SMU/Year3/Sem2/Geo/leaflet.fullscreen-1.1.4.zip", repos = NULL, type = "win.binary")
install.packages("E:/SMU/Year3/Sem2/Geo/leaflet.fullscreen-1.1.4.zip", repos = NULL, type = "win.binary")
# Chunk 1
library(leaflet)
# Chunk 2
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m  # Print the map
# Chunk 1
library(leaflet)
# Chunk 2
m <- leaflet()
addTiles()   # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m  # Print the map
library(leaflet)
# Chunk 1
library(leaflet)
# Chunk 2
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m  # Print the map
```{r}
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m
```{r}
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m  # Print the map
```
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(103.7732232,1.4293702, zoom = 16)
m
library(leaflet)
m <- leaflet() %>%
setView(103.7732232,1.4293702, zoom = 16)
m%>% addTiles() # Add default OpenStreetMap map tiles
library(leaflet)
m <- leaflet() %>%
setView(103.7732232,1.4293702, zoom = 16)
m %>% addTiles() # Add default OpenStreetMap map tiles
m %>% addProviderTiles(providers$Esri.NatGeoWorldMap)
library(leaflet)
m <- leaflet() %>%
setView(103.7732232,1.4293702, zoom = 16)
m %>% addTiles() # Add default OpenStreetMap map tiles
library(shiny); runApp('helpingHands.R')
library(leaflet)
library(rgdal)
shops <- read.csv ("/attributes/shops.csv")
shops <- read.csv ("./attributes/shops.csv")
shops <- read.csv ("/attributetable/shops.csv")
shops <- read.csv ("/attributetable/shops.csv")
shops <- read.csv ("attributetable/shops.csv")
Footpath<- readOGR(dsn="shapefile", layer="Footpath")
Footpath<- readOGR(dsn="shapefile", layer="Footpath")
NeighbourhoodAmenities <- read.csv ("attributetable/NeighbourhoodAmenities.csv")
HDB <- read.csv ("attributetable/HDB.csv")
runApp('helpingHands.R')
server<-(function(input, output) {
output$map <- renderLeaflet({
df <- shops[shops$CATEGORY == input$CATEGORY,]
m<-leaflet()  %>%
setView(103.777395,1.428903, zoom = 17)
m%>%addTiles() %>%
addMarkers(~LONGITUDE,~LATITUDE,
popup=~POI_NAME,data=shops) %>%
addMarkers(~LONGITUDE,~LATITUDE,
popup=~POI_ADD,data=HDB) %>%
addMarkers(~LONGITUDE,~LATITUDE,
popup=~POI_NAME,data=NeighbourhoodAmenities) %>%
})
})
library(shiny)
library(leaflet)
ui<-fluidPage(
navbarPage(title="Helping Hands",
tabPanel(title = "Map View",
fluidRow(
column(10, (leafletOutput("map","100%",600))),
column(2,selectInput("year",
label = "Choose Year:",
choices = c(2000,2005,2010),
selected = 2000)
)
)
),
navbarMenu(title = "Accessibility",
tabPanel(title = "Hansen Potential Model"),
tabPanel(title = "Weighted Matrix"),
tabPanel(title = "Manual distance according to footpath")),
tabPanel(title="Statistics")
))
shinyApp(server = server, ui = ui)
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
summary(shops)
coords <- cbind(shops$LONGITUDE, shops$LONGITUDE)
sp_shops <- SpatialPointsDataFrame(coords = coords, data = shops, proj4string = CRS("+proj=longlat +datum=SVY21"))
sp_shops_proj <- spTransform(sp_shops, CRS("+init=epsg:3414"))
plot(sp_shops)
summary(sp_shops)
coords <- cbind(shops$LONGITUDE, shops$LONGITUDE)
sp_shops <- SpatialPointsDataFrame(coords = coords, data = shops, proj4string = CRS("+proj=longlat +datum=SVY21"))
sp_shops <- SpatialPointsDataFrame(coords = coords, data = shops, proj4string = CRS("+proj=longlat +datum=WG84"))
UTMcoor=read.csv(file=shops)
UTMcoor=read.csv(shops)
UTMcoor=read.csv(data=shops)
str(shops)
names(shops)
head(shops)
plot.shops <- SpatialPointsDataFrame(shops[,8:9],
shops,    #the R object to convert
proj4string = utm48nCRS)
plot.shops <- SpatialPointsDataFrame(shops[,8:9],
shops,    #the R object to convert
proj4string = CRS("+init=espg:32648")
})
plot.shops <- SpatialPointsDataFrame(shops[,8:9],
shops,    #the R object to convert
proj4string = CRS("+init=espg:32648")
crs
crs(shops)
plot(shops)
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,   c #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84")
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,   c #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84")
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,    #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84")
)
crs(plot.shops)
plot(plot.shops)
plot.shops <- SpatialPointsDataFrame(shops[,8:9],
shops,    #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84")
)
plot(plot.shops)
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,    #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84")
plot(plot.shops)
plot(plot.shops)
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,    #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84")
)
plot(plot.shops)
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,    #the R object to convert
proj4string = CRS("UTM48")
)
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,    #the R object to convert
proj4string = utm48CRS)
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,    #the R object to convert
proj4string = utm48nCRS)
plot.shops <- SpatialPointsDataFrame(shops[,6:7],
shops,    #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(plot.shops)
names(shops)
plot.shops <- SpatialPointsDataFrame(shops[,8:9],shops,proj4string = CRS("+proj=longlat +datum=WGS84"))
plot.shops <- SpatialPointsDataFrame(shops[,8:9],
shops,    #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(plot.shops)
View(NeighbourhoodAmenities)
plot.NeighbourhoodAmenities <- SpatialPointsDataFrame(NeighbourhoodAmenities[,7:8],
NeighbourhoodAmenities,    #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(plot.NeighbourhoodAmenities)
View(HDB)
plot.HDB <- SpatialPointsDataFrame(HDB[,6:7],
HDB,    #the R object to convert
proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(HDB)
plot(plot.HDB)
runApp('helpingHands.R')
runApp('helpingHands.R')
mpsz_svy21 <- readOGR(dsn="shapefile", layer="MP14_SUBZONE_NO_SEA_PL")
buff2km <- gBuffer(plot.HDB, byid = TRUE, width = 500)
library(rgeos)
buff2km <- gBuffer(plot.HDB, byid = TRUE, width = 500)
buff2km <- gBuffer(plot.HDB, byid = TRUE, width = 2000)
plot(buff2km)
plot.HDB$LATITUDE
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
library(shiny); runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
crs(Footpath)
library("raster", lib.loc="~/R/win-library/3.3")
crs(Footpath)
crs(shops)
crs(plot.shops)
csrs(m)
crs(m)
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
plot(Footpath)
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
View(HDB)
summary(Footpath)
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
runApp('helpingHands.R')
